import org.junit.Before;
import org.junit.Test;

import model.Image;
import model.Pixel;
import model.SimpleImage;
import model.ops.Sharpen;
import model.ops.ImageOperation;

import static org.junit.Assert.assertArrayEquals;

/**
 * Testing Class for KernelOperation.
 */
public class SharpenTest {
  private ImageOperation op = new Sharpen();
  private Image sunsetpix;
  private Pixel[][] sunsetpixalt;
  private Image cblockpix;
  private Pixel[][] cblockpixalt;

  @Before
  public void init() {
    Pixel redp = new Pixel(255, 0, 0);
    Pixel orangep = new Pixel(255, 128, 0);
    Pixel pinkp = new Pixel(255, 128, 128);
    Pixel yellowp = new Pixel(255, 225, 0);
    Pixel bluep = new Pixel(0, 150, 225);
    Pixel whitep = new Pixel(255, 225, 225);

    sunsetpix = new SimpleImage(new Pixel[][]{
            {redp, redp, orangep, orangep},
            {redp, redp, orangep, orangep},
            {pinkp, pinkp, yellowp, yellowp},
            {pinkp, pinkp, yellowp, yellowp}});
    sunsetpixalt = new Pixel[][]{
            {new Pixel(255, 0, 0),
                new Pixel(255, 0, 0),
                new Pixel(255, 135, 0),
                new Pixel(255, 151, 0)},
            {new Pixel(255, 0, 32),
                new Pixel(255, 35, 32),
                new Pixel(255, 255, 0),
                new Pixel(255, 248, 0)},
            {new Pixel(255, 135, 224),
                new Pixel(255, 255, 224),
                new Pixel(255, 255, 32),
                new Pixel(255, 255, 0)},
            {new Pixel(255, 151, 224),
                new Pixel(255, 248, 224),
                new Pixel(255, 255, 32),
                new Pixel(255, 255, 0)}};
    cblockpix = new SimpleImage(new Pixel[][]{
            {bluep, bluep, bluep, whitep, whitep},
            {bluep, bluep, bluep, whitep, whitep},
            {pinkp, pinkp, yellowp, bluep, bluep},
            {pinkp, pinkp, yellowp, bluep, bluep}});
    cblockpixalt = new Pixel[][]{
            {new Pixel(0, 164, 255),
                new Pixel(0, 202, 255),
                new Pixel(0, 183, 255),
                new Pixel(255, 255, 255),
                new Pixel(255, 255, 255)},
            {new Pixel(0, 200, 255),
                new Pixel(31, 255, 255),
                new Pixel(63, 255, 255),
                new Pixel(255, 255, 255),
                new Pixel(255, 255, 255)},
            {new Pixel(255, 167, 224),
                new Pixel(255, 255, 195),
                new Pixel(255, 255, 60),
                new Pixel(127, 255, 255),
                new Pixel(0, 225, 255)},
            {new Pixel(255, 111, 139),
                new Pixel(255, 214, 55),
                new Pixel(255, 238, 0),
                new Pixel(0, 249, 249),
                new Pixel(0, 131, 255)}};
  }

  @Test
  public void testImageOp() {
    assertArrayEquals(sunsetpixalt, op.apply(sunsetpix).getCopyPixels());
    assertArrayEquals(cblockpixalt, op.apply(cblockpix).getCopyPixels());
  }
}